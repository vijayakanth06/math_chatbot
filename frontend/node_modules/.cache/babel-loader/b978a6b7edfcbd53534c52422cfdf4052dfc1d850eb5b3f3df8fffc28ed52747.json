{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\subbu\\\\OneDrive\\\\Desktop\\\\chatbot\\\\frontend\\\\src\\\\components\\\\Dashboard.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport './Dashboard.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Dashboard = ({\n  username\n}) => {\n  _s();\n  const [expression, setExpression] = useState('');\n  const [result, setResult] = useState('');\n  const [notes, setNotes] = useState([]);\n  const [newNote, setNewNote] = useState('');\n  const [reminder, setReminder] = useState({\n    date: '',\n    time: '',\n    note: ''\n  });\n  const [reminders, setReminders] = useState([]);\n  const [showChatbot, setShowChatbot] = useState(false);\n  const [timeLeft, setTimeLeft] = useState(25 * 60);\n  const [isRunning, setIsRunning] = useState(false);\n\n  // Fetch notes from backend on load\n  useEffect(() => {\n    fetch(`http://localhost:5000/api/notes/${username}`).then(res => res.json()).then(data => setNotes(data.map(n => n.content))).catch(err => console.error(\"Failed to fetch notes:\", err));\n  }, [username]);\n  const formatTime = seconds => {\n    const mins = String(Math.floor(seconds / 60)).padStart(2, '0');\n    const secs = String(seconds % 60).padStart(2, '0');\n    return `${mins}:${secs}`;\n  };\n  useEffect(() => {\n    let timer;\n    if (isRunning && timeLeft > 0) {\n      timer = setInterval(() => setTimeLeft(prev => prev - 1), 1000);\n    } else if (timeLeft === 0 && isRunning) {\n      setIsRunning(false);\n      alert('Time is up!');\n    }\n    return () => clearInterval(timer);\n  }, [isRunning, timeLeft]);\n  const startTimer = minutes => {\n    setTimeLeft(minutes * 60);\n    setIsRunning(true);\n  };\n  const handleCalculate = () => {\n    try {\n      const evalResult = eval(expression);\n      setResult(evalResult);\n    } catch (err) {\n      setResult('Error');\n    }\n  };\n  const handleClear = () => {\n    setExpression('');\n    setResult('');\n  };\n  const handleAddNote = () => {\n    if (newNote.trim() !== '') {\n      fetch('http://localhost:5000/api/notes', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          username,\n          content: newNote\n        })\n      }).then(res => res.json()).then(data => {\n        setNotes([...notes, data.content]);\n        setNewNote('');\n      }).catch(err => console.error(\"Failed to add note:\", err));\n    }\n  };\n  const handleAddReminder = () => {\n    if (reminder.date && reminder.time && reminder.note.trim() !== '') {\n      setReminders([...reminders, reminder]);\n      setReminder({\n        date: '',\n        time: '',\n        note: ''\n      });\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"dashboard-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"nav\", {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"logo\",\n        children: \"\\u26A1 AI Study Buddy\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"welcome-text\",\n          children: [\"Welcome, \", username, \"!\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"dashboard-panels\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"panel left-panel\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"Scientific Calculator\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 95,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          placeholder: \"Enter expression\",\n          value: expression,\n          onChange: e => setExpression(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 96,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"calculator-buttons\",\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: handleCalculate,\n            children: \"Calculate\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 103,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: handleClear,\n            children: \"Clear\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 104,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 102,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"calculator-result\",\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: \"Result:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 107,\n            columnNumber: 13\n          }, this), \" \", result]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 106,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n          style: {\n            marginTop: '30px'\n          },\n          children: \"Notes\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 110,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          placeholder: \"Enter a note\",\n          value: newNote,\n          onChange: e => setNewNote(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 111,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: handleAddNote,\n          children: \"Add Note\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 117,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"items-list\",\n          children: notes.map((note, idx) => /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"card\",\n            children: [\"\\uD83D\\uDCDD \", note]\n          }, idx, true, {\n            fileName: _jsxFileName,\n            lineNumber: 120,\n            columnNumber: 15\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 118,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"panel middle-panel\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"Your Study Dashboard\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 127,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Add your notes and use the calculator to the left, and set reminders/timers to the right to stay productive!\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 128,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 126,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"panel right-panel\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"Reminders\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 133,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"date\",\n          value: reminder.date,\n          onChange: e => setReminder({\n            ...reminder,\n            date: e.target.value\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 134,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"time\",\n          value: reminder.time,\n          onChange: e => setReminder({\n            ...reminder,\n            time: e.target.value\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 139,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          placeholder: \"Reminder note\",\n          value: reminder.note,\n          onChange: e => setReminder({\n            ...reminder,\n            note: e.target.value\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 144,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: handleAddReminder,\n          children: \"Set Reminder\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 150,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"items-list\",\n          children: reminders.map((rem, idx) => /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"card\",\n            children: [\"\\uD83D\\uDCC5 \", rem.date, \" \\u23F0 \", rem.time, \" - \", rem.note]\n          }, idx, true, {\n            fileName: _jsxFileName,\n            lineNumber: 153,\n            columnNumber: 15\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 151,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n          style: {\n            marginTop: '30px'\n          },\n          children: \"Quick Timer\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 159,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"round-timer\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"timer-display\",\n            children: formatTime(timeLeft)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 161,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"timer-options\",\n            children: [/*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => startTimer(1),\n              children: \"1 Min\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 163,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => startTimer(5),\n              children: \"5 Min\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 164,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => {\n                const hour = prompt('Enter number of hours:');\n                if (hour && !isNaN(hour)) startTimer(parseInt(hour) * 60);\n              },\n              children: \"Set Hourly Timer\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 165,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => {\n                const hours = prompt('Enter hours (0 if none):');\n                const minutes = prompt('Enter minutes (0 if none):');\n                const totalMinutes = (parseInt(hours) || 0) * 60 + (parseInt(minutes) || 0);\n                if (totalMinutes > 0) {\n                  startTimer(totalMinutes);\n                } else {\n                  alert('Please enter a valid time!');\n                }\n              },\n              children: \"Set Custom Timer\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 169,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 162,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 160,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 132,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"chatbot-toggle\",\n      onClick: () => setShowChatbot(!showChatbot),\n      children: \"\\uD83D\\uDCAC\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 185,\n      columnNumber: 7\n    }, this), showChatbot && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"chatbot-popup\",\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Hi! I'm your AI Study Buddy chatbot. How can I help you today?\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 190,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"Type your message...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 191,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        children: \"Send\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 192,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 189,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 84,\n    columnNumber: 5\n  }, this);\n};\n_s(Dashboard, \"ghNHnZ8T5xCSvQT9QpeEeRT8OOo=\");\n_c = Dashboard;\nexport default Dashboard;\nvar _c;\n$RefreshReg$(_c, \"Dashboard\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","Dashboard","username","_s","expression","setExpression","result","setResult","notes","setNotes","newNote","setNewNote","reminder","setReminder","date","time","note","reminders","setReminders","showChatbot","setShowChatbot","timeLeft","setTimeLeft","isRunning","setIsRunning","fetch","then","res","json","data","map","n","content","catch","err","console","error","formatTime","seconds","mins","String","Math","floor","padStart","secs","timer","setInterval","prev","alert","clearInterval","startTimer","minutes","handleCalculate","evalResult","eval","handleClear","handleAddNote","trim","method","headers","body","JSON","stringify","handleAddReminder","className","children","fileName","_jsxFileName","lineNumber","columnNumber","type","placeholder","value","onChange","e","target","onClick","style","marginTop","idx","rem","hour","prompt","isNaN","parseInt","hours","totalMinutes","_c","$RefreshReg$"],"sources":["C:/Users/subbu/OneDrive/Desktop/chatbot/frontend/src/components/Dashboard.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport './Dashboard.css';\r\n\r\nconst Dashboard = ({ username }) => {\r\n  const [expression, setExpression] = useState('');\r\n  const [result, setResult] = useState('');\r\n  const [notes, setNotes] = useState([]);\r\n  const [newNote, setNewNote] = useState('');\r\n  const [reminder, setReminder] = useState({ date: '', time: '', note: '' });\r\n  const [reminders, setReminders] = useState([]);\r\n  const [showChatbot, setShowChatbot] = useState(false);\r\n\r\n  const [timeLeft, setTimeLeft] = useState(25 * 60);\r\n  const [isRunning, setIsRunning] = useState(false);\r\n\r\n  // Fetch notes from backend on load\r\n  useEffect(() => {\r\n    fetch(`http://localhost:5000/api/notes/${username}`)\r\n      .then((res) => res.json())\r\n      .then((data) => setNotes(data.map((n) => n.content)))\r\n      .catch((err) => console.error(\"Failed to fetch notes:\", err));\r\n  }, [username]);\r\n\r\n  const formatTime = (seconds) => {\r\n    const mins = String(Math.floor(seconds / 60)).padStart(2, '0');\r\n    const secs = String(seconds % 60).padStart(2, '0');\r\n    return `${mins}:${secs}`;\r\n  };\r\n\r\n  useEffect(() => {\r\n    let timer;\r\n    if (isRunning && timeLeft > 0) {\r\n      timer = setInterval(() => setTimeLeft((prev) => prev - 1), 1000);\r\n    } else if (timeLeft === 0 && isRunning) {\r\n      setIsRunning(false);\r\n      alert('Time is up!');\r\n    }\r\n    return () => clearInterval(timer);\r\n  }, [isRunning, timeLeft]);\r\n\r\n  const startTimer = (minutes) => {\r\n    setTimeLeft(minutes * 60);\r\n    setIsRunning(true);\r\n  };\r\n\r\n  const handleCalculate = () => {\r\n    try {\r\n      const evalResult = eval(expression);\r\n      setResult(evalResult);\r\n    } catch (err) {\r\n      setResult('Error');\r\n    }\r\n  };\r\n\r\n  const handleClear = () => {\r\n    setExpression('');\r\n    setResult('');\r\n  };\r\n\r\n  const handleAddNote = () => {\r\n    if (newNote.trim() !== '') {\r\n      fetch('http://localhost:5000/api/notes', {\r\n        method: 'POST',\r\n        headers: { 'Content-Type': 'application/json' },\r\n        body: JSON.stringify({ username, content: newNote }),\r\n      })\r\n        .then((res) => res.json())\r\n        .then((data) => {\r\n          setNotes([...notes, data.content]);\r\n          setNewNote('');\r\n        })\r\n        .catch((err) => console.error(\"Failed to add note:\", err));\r\n    }\r\n  };\r\n\r\n  const handleAddReminder = () => {\r\n    if (reminder.date && reminder.time && reminder.note.trim() !== '') {\r\n      setReminders([...reminders, reminder]);\r\n      setReminder({ date: '', time: '', note: '' });\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"dashboard-container\">\r\n      <nav>\r\n        <div className=\"logo\">⚡ AI Study Buddy</div>\r\n        <div>\r\n          <span className=\"welcome-text\">Welcome, {username}!</span>\r\n        </div>\r\n      </nav>\r\n\r\n      <div className=\"dashboard-panels\">\r\n        {/* Left Panel */}\r\n        <div className=\"panel left-panel\">\r\n          <h3>Scientific Calculator</h3>\r\n          <input\r\n            type=\"text\"\r\n            placeholder=\"Enter expression\"\r\n            value={expression}\r\n            onChange={(e) => setExpression(e.target.value)}\r\n          />\r\n          <div className=\"calculator-buttons\">\r\n            <button onClick={handleCalculate}>Calculate</button>\r\n            <button onClick={handleClear}>Clear</button>\r\n          </div>\r\n          <div className=\"calculator-result\">\r\n            <strong>Result:</strong> {result}\r\n          </div>\r\n\r\n          <h3 style={{ marginTop: '30px' }}>Notes</h3>\r\n          <input\r\n            type=\"text\"\r\n            placeholder=\"Enter a note\"\r\n            value={newNote}\r\n            onChange={(e) => setNewNote(e.target.value)}\r\n          />\r\n          <button onClick={handleAddNote}>Add Note</button>\r\n          <div className=\"items-list\">\r\n            {notes.map((note, idx) => (\r\n              <div key={idx} className=\"card\">📝 {note}</div>\r\n            ))}\r\n          </div>\r\n        </div>\r\n\r\n        {/* Middle Panel */}\r\n        <div className=\"panel middle-panel\">\r\n          <h2>Your Study Dashboard</h2>\r\n          <p>Add your notes and use the calculator to the left, and set reminders/timers to the right to stay productive!</p>\r\n        </div>\r\n\r\n        {/* Right Panel */}\r\n        <div className=\"panel right-panel\">\r\n          <h3>Reminders</h3>\r\n          <input\r\n            type=\"date\"\r\n            value={reminder.date}\r\n            onChange={(e) => setReminder({ ...reminder, date: e.target.value })}\r\n          />\r\n          <input\r\n            type=\"time\"\r\n            value={reminder.time}\r\n            onChange={(e) => setReminder({ ...reminder, time: e.target.value })}\r\n          />\r\n          <input\r\n            type=\"text\"\r\n            placeholder=\"Reminder note\"\r\n            value={reminder.note}\r\n            onChange={(e) => setReminder({ ...reminder, note: e.target.value })}\r\n          />\r\n          <button onClick={handleAddReminder}>Set Reminder</button>\r\n          <div className=\"items-list\">\r\n            {reminders.map((rem, idx) => (\r\n              <div key={idx} className=\"card\">\r\n                📅 {rem.date} ⏰ {rem.time} - {rem.note}\r\n              </div>\r\n            ))}\r\n          </div>\r\n\r\n          <h3 style={{ marginTop: '30px' }}>Quick Timer</h3>\r\n          <div className=\"round-timer\">\r\n            <div className=\"timer-display\">{formatTime(timeLeft)}</div>\r\n            <div className=\"timer-options\">\r\n              <button onClick={() => startTimer(1)}>1 Min</button>\r\n              <button onClick={() => startTimer(5)}>5 Min</button>\r\n              <button onClick={() => {\r\n                const hour = prompt('Enter number of hours:');\r\n                if (hour && !isNaN(hour)) startTimer(parseInt(hour) * 60);\r\n              }}>Set Hourly Timer</button>\r\n              <button onClick={() => {\r\n                const hours = prompt('Enter hours (0 if none):');\r\n                const minutes = prompt('Enter minutes (0 if none):');\r\n                const totalMinutes = (parseInt(hours) || 0) * 60 + (parseInt(minutes) || 0);\r\n                if (totalMinutes > 0) {\r\n                  startTimer(totalMinutes);\r\n                } else {\r\n                  alert('Please enter a valid time!');\r\n                }\r\n              }}>Set Custom Timer</button>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n      {/* Chatbot Button */}\r\n      <button className=\"chatbot-toggle\" onClick={() => setShowChatbot(!showChatbot)}>\r\n        💬\r\n      </button>\r\n      {showChatbot && (\r\n        <div className=\"chatbot-popup\">\r\n          <p>Hi! I'm your AI Study Buddy chatbot. How can I help you today?</p>\r\n          <input type=\"text\" placeholder=\"Type your message...\" />\r\n          <button>Send</button>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Dashboard;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}